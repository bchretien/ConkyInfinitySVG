###############################################################################
#	Conky Theme	: InfinitySVG
#
#	Updates and SVG by:				Eric Weik
#	Original Infinity theme by:		Harshit Yadav
#	Includes lua code:				Clock Rings by londonali1010 (2009)
#	Feel Free to distribute
#	For Installation Instructions see README
#
#	Colors from haunted.lua and .conkyrc:
#	b7b7b7 (light grey)
#	6f6f6f (medium grey)
#	2c2c2c (dark grey)
#
#	4a89a7 (blue)		hardware / memory / root
#	468626 (blue alt)
#	e83737 (red)		swap
#	46a646 (green)		user / cpu / home
#	f4732d (orange)		network
#	ebff46 (yellow)		network
#	FFA300 (br. orange)	text highlights
#
#	Changelog:
#	 + v1.0.1:	Initial version by Harshit Yadav
#	 + [All further changes tracked in the git repository.]
###############################################################################



## Conky settings
background yes
update_interval 1.0

cpu_avg_samples 2
net_avg_samples 2

override_utf8_locale yes

double_buffer yes
no_buffers yes

text_buffer_size 2048

#imlib_cache_size 0

default_color b7b7b7



## Window specifications

# Allow conky to handle transparency -- all or nothing
#own_window yes
#own_window_type conky
#own_window_transparent yes

# Allow compiz to handle transparency manually (you will need to add Conky to compiz)
own_window yes
own_window_type normal
own_window_transparent yes
own_window_hints undecorate,sticky,skip_taskbar,skip_pager,below

# Allow conky to handle transparency (with percentages) with a compositor
# From http://blog.mmassonnet.info/2011/08/xfce-48-with-conky.html)
#own_window yes
#own_window_type normal
#own_window_hints undecorated,below,sticky,skip_taskbar,skip_pager	# make it behave like it belongs to the desktop
#own_window_argb_visual yes	# true transparency, a compositor has to be active
#own_window_argb_value 210	# make the background semi-transparent


# Color settings
default_color eaeaea

color1 b7b7b7        #(light grey)
color2 6f6f6f        #(medium grey)
color2 2c2c2c        #(dark grey)
color3 4a89a7        #(teal / blue)
color4 e83737        #(red)
color5 ebff46        #(yellow)
color6 46a646        #(green)
color7 f4732d        #(orange)
color8 ffa300        #(bright orange)


## This Resolution is set according to the screen resolution of 1920 1080
## Adjust According to yours

#minimum_size 1600 900
minimum_size 3000 3000

#alignment top_left
alignment top_right
gap_x 0
gap_y 0


## Graphics settings
border_inner_margin 0
border_outer_margin 0

draw_shades no
draw_outline no
draw_borders no
draw_graph_borders yes

# Use short units (G etc.)
short_units yes

# Pad the % outputs to two places
pad_percents 2

# Fixed width for top names
top_name_width 8

draw_graph_borders no
imlib_cache_flush_interval 300

## Text settings
use_xft yes
xftfont caviar dreams:size=8
xftalpha 0.5
uppercase no

# Unit for temperature: celsius, fahrenheit
temperature_unit celsius

## Lua: load clock rings.
lua_load ~/.conky-themes/ConkyInfinitySVG/.conky/scripts/haunted.lua
lua_draw_hook_pre clock_rings



## Possible variables to be used:
#
# 	Variable          Arguments     Description

# 	addr              (interface)   IP address for an interface
# 	acpiacadapter                   ACPI ac adapter state.
# 	acpifan                         ACPI fan state
# 	acpitemp                        ACPI temperature.
# 	adt746xcpu                      CPU temperature from therm_adt746x
# 	adt746xfan                      Fan speed from therm_adt746x
# 	alignr            (num)         Right-justify text, with space of N
# 	alignc                          Align text to centre
# 	battery           (num)         Remaining capasity in ACPI or APM
# 					battery. ACPI battery number can be
# 					given as argument (default is BAT0).
# 	buffers                         Amount of memory buffered
# 	cached                          Amount of memory cached
# 	color             (color)       Change drawing color to color
# 	cpu                             CPU usage in percents
# 	cpubar            (height)      Bar that shows CPU usage, height is
# 					bar's height in pixels
# 	cpugraph          (height),(width) (gradient colour 1) (gradient colour 2)
# 					CPU usage graph, with optional colours in hex,
# 					minus the #.
# 	downspeed         net           Download speed in kilobytes
# 	downspeedf        net           Download speed in kilobytes with one
# 					decimal
# 	downspeedgraph    net (height),(width) (gradient colour 1) (gradient colour 2)
# 					Download speed graph, colours defined in
# 					hex, minus the #.
# 	exec              shell command Executes a shell command and displays
# 					the output in conky. warning: this
# 					takes a lot more resources than other
# 					variables. I'd recommend coding wanted
# 					behaviour in C and posting a patch :-).
# 	execbar           shell command Same as exec, except if the first value
# 					return is a value between 0-100, it
# 					will use that number for a bar.
# 					The size for the bar is currently fixed,
# 					but that may change in the future.
# 	execgraph         shell command Same as execbar, but graphs values
# 	execi             interval, shell command
#  					Same as exec but with specific interval.
# 					Interval can't be less than
# 					update_interval in configuration.
#	font		  font		Specify a different font.  Only applies
#					to one line.
# 	fs_bar            (height), (fs)Bar that shows how much space is used on
# 					a file system. height is the height in
# 					pixels. fs is any file on that file
# 					system.
# 	fs_free           (fs)          Free space on a file system available
# 					for users.
# 	fs_free_perc      (fs)          Free percentage of space on a file
# 					system available for users.
# 	fs_size           (fs)          File system size
# 	fs_used           (fs)          File system used space
# 	hr                (height)      Horizontal line, height is the height in
# 					pixels
# 	i2c               (dev), type, n  I2C sensor from sysfs (Linux 2.6). dev
# 					may be omitted if you have only one I2C
# 					device. type is either in (or vol)
# 					meaning voltage, fan meaning fan or
# 					temp/tempf (first in C, second in F)
# 					meaning temperature. n is number of the
# 					sensor. See /sys/bus/i2c/devices/ on
# 					your local computer.
# 	if_running        (process)     if PROCESS is running, display
# 					everything if_running and the matching $endif
# 	if_existing       (file)        if FILE exists, display everything between
# 					if_existing and the matching $endif
# 	if_mounted        (mountpoint)  if MOUNTPOINT is mounted, display everything between
# 					if_mounted and the matching $endif
# 	else                            Text to show if any of the above are not true
# 	kernel                          Kernel version
# 	linkstatus        (interface)   Get the link status for wireless connections
# 	loadavg           (1), (2), (3) System load average, 1 is for past 1
# 					minute, 2 for past 5 minutes and 3 for
# 					past 15 minutes.
# 	machine                         Machine, i686 for example
# 	mails                           Mail count in mail spool. You can use
# 					program like fetchmail to get mails from
# 					some server using your favourite
# 					protocol. See also new_mails.
# 	mem                             Amount of memory in use
# 	membar            (height)      Bar that shows amount of memory in use
# 	memmax                          Total amount of memory
# 	memperc                         Percentage of memory in use
#
# 	metar_ob_time
# 	metar_temp
# 	metar_tempf                     Temp in F
# 	metar_windchill
# 	metar_dew_point                 There are a bunch of these
# 	metar_rh                        and they are self-explanatory
# 	metar_windspeed
# 	metar_winddir
# 	metar_swinddir
# 	metar_cloud
# 	metar_u2d_time
#
# 	ml_upload_counter               total session upload in mb
# 	ml_download_counter             total session download in mb
# 	ml_nshared_files                number of shared files
# 	ml_shared_counter               total session shared in mb, buggy
# 					in some mldonkey versions
# 	ml_tcp_upload_rate              tcp upload rate in kb/s
# 	ml_tcp_download_rate            tcp download rate in kb/s
# 	ml_udp_upload_rate              udp upload rate in kb/s
# 	ml_udp_download_rate            udp download rate in kb/s
# 	ml_ndownloaded_files            number of completed files
# 	ml_ndownloading_files           number of downloading files
#
# 	mpd_artist			Artist in current MPD song
# 					(must be enabled at compile)
# 	mpd_album			Album in current MPD song
# 	mpd_bar           (height)      Bar of mpd's progress
# 	mpd_bitrate                     Bitrate of current song
# 	mpd_status                      Playing, stopped, et cetera.
# 	mpd_title			Title of current MPD song
# 	mpd_vol				MPD's volume
# 	mpd_elapsed                     Song's elapsed time
# 	mpd_length                      Song's length
# 	mpd_percent                     Percent of song's progress
# 	new_mails                       Unread mail count in mail spool.
# 	nodename                        Hostname
# 	outlinecolor      (color)       Change outline color
# 	pre_exec          shell command Executes a shell command one time before
# 					conky displays anything and puts output
# 					as text.
# 	processes                       Total processes (sleeping and running)
# 	running_processes               Running processes (not sleeping),
# 					requires Linux 2.6
# 	shadecolor        (color)       Change shading color
# 	stippled_hr       (space),      Stippled (dashed) horizontal line
# 			(height)
# 	swapbar           (height)      Bar that shows amount of swap in use
# 	swap                            Amount of swap in use
# 	swapmax                         Total amount of swap
# 	swapperc                        Percentage of swap in use
# 	sysname                         System name, Linux for example
# 	offset            pixels        Move text over by N pixels
# 	tail              logfile, lines (interval)
# 					Displays last N lines of supplied text
# 					text file.  If interval is not supplied,
# 					Conky assumes 2x Conky's interval.
# 					Max of 30 lines.
# 					Max of 30 lines can be displayed.
# 	time              (format)      Local time, see man strftime to get more
# 					information about format
# 	totaldown         net           Total download, overflows at 4 GB on
# 					Linux with 32-bit arch and there doesn't
# 					seem to be a way to know how many times
# 					it has already done that before conky
# 					has started.
# 	top               type, num     This takes arguments in the form:
# 					top <name> <number>
# 					Basically, processes are ranked from
# 					highest to lowest in terms of cpu
# 					usage, which is what <num> represents.
# 					The types are: "name", "pid", "cpu", and
# 					"mem".
# 					There can be a max of 10 processes listed.
# 	top_mem           type, num     Same as top, except sorted by mem usage
# 					instead of cpu
# 	totalup           net           Total upload, this one too, may overflow
# 	updates                         Number of updates (for debugging)
# 	upspeed           net           Upload speed in kilobytes
# 	upspeedf          net           Upload speed in kilobytes with one
# 					decimal
# 	upspeedgraph      net (height),(width)  (gradient colour 1) (gradient colour 2)
# 					Upload speed graph, colours defined in
# 					hex, minus the #.
# 	uptime                          Uptime
# 	uptime_short                    Uptime in a shorter format
#
# 	seti_prog                       Seti@home current progress
# 	seti_progbar      (height)      Seti@home current progress bar
# 	seti_credit                     Seti@home total user credit
#
# variable is given either in format $variable or in ${variable}. Latter
# allows characters right after the variable and must be used in network
# stuff because of an argument

# stuff after 'TEXT' will be formatted on screen
TEXT
## Clock and header
${voffset 20}${font Mono:size=0}
${offset 300}${color EAEAEA}${font GE Inspira:pixelsize=80}${time %H:%M}${voffset 20}${font}${voffset -84}${voffset 10}${color FFA300}${font GE Inspira:pixelsize=42}${offset 80}${time %d}${offset -80} ${voffset -15}${color EAEAEA}${font GE Inspira:pixelsize=22}${offset 80}${time  %B} ${time %Y}${font}${voffset 124}${font GE Inspira:pixelsize=58}${offset -547} ${font}
${goto 450}${voffset -100}${font Ubuntu:pixelsize=10}${color FFA300}HD ${goto 480}$color${fs_free /} / ${fs_size /}${goto 580}${color FFA300}RAM ${goto 620}$color$mem / $memmax${goto 720}${color FFA300}CPU ${goto 760}$color${cpu cpu0}%
${voffset 8}#${offset 295}${color 2c2c2c}${hr 4}
${image ~/.conky-themes/ConkyInfinitySVG/.conky/background_music.png}
${voffset -175}${font Mono:size=0}
#
## Disk usage node
${voffset 416}${font Mono:size=0}
${voffset 0}${goto 120}${color 4a89a7}${font Santana:size=8:style=Bold}root$color${font Santana:size=8} :${goto 175}${fs_used /}/${fs_size /}
${voffset 13}${goto 120}${color 46a646}${font Santana:size=8:style=Bold}home$color${font Santana:size=8} :${goto 175}${fs_used /home}/${fs_size /home}$font
${voffset 13}${goto 120}${color e83737}${font Santana:size=8:style=Bold}swap$color${font Santana:size=8} : ${goto 175}${swap}/${swapfree}$font
${voffset -484}${font Mono:size=0}
#
#
## "Home" node (kernel, etc.)
#${voffset 370}${font Mono:size=0}
${voffset 320}${font Mono:size=0}
${offset 463}${voffset 0}$color${font Santana:size=9:style=Bold}Linux ${kernel} kernel
${offset 465}${voffset 0}${color 4a89a7}${font Santana:size=8}Uptime : ${offset 9}$color${uptime}
#${voffset -420}${font Mono:size=0}
${voffset -370}${font Mono:size=0}
#
#
## "User" node (whoami, top process, etc.)
${voffset 300}${font Mono:size=0}
${offset 758}${voffset 0}$color${font Santana:size=9:style=Bold}${exec whoami}@${nodename}
${offset 760}${voffset 0}$color${font Santana:size=8}${color 46a646}Top (CPU) : ${offset 9}$color${top name 5}${goto 895}${top cpu 5}
${offset 760}${voffset 0}$color${font Santana:size=8}${color 46a646}Top (RAM) : ${offset 9}$color${top_mem name 5}${goto 895}${top_mem mem 5}
${offset 760}${voffset 2}${color 6f6f6f}CPU usage (${cpu}%) :
${offset 760}${voffset -2}$color${font Santana:size=8}${color 2c2c2c}${cpugraph 32,160 2c2c2c 46a646}
${voffset -420}${font Mono:size=0}
#
#
## "Network" node (IP, connections, etc.)
${voffset 420}${font Mono:size=0}
${offset 463}${voffset 0}$color${font Santana:size=9:style=Bold}Local IP :${goto 545}${addr eth0}
${offset 463}${voffset 0}$color${font Santana:size=9:style=Bold}Public IP :${goto 545}${execi 600 ~/.conky-themes/scripts/net/public_ip.sh}
${offset 465}${voffset 0}$color${font Santana:size=8}TCP Connections : ${tcp_portmon 1 65535 count}
${offset 465}${voffset 0}${font Santana:size=8}${color f4732d}Down : ${goto 515}$color${downspeed eth0}/s ${goto 565}${color ebff46}Up : ${goto 615}$color${upspeed eth0}/s
${offset 465}${voffset 0}${font Santana:size=8}${color f4732d}Total : ${goto 515}$color${totaldown eth0} ${goto 565}${color ebff46}Total : ${goto 615}$color${totalup eth0}
${goto 465}${voffset -2}$color${font Santana:size=8}${color 2c2c2c}${downspeedgraph eth0 32,90 b7b7b7 f4732d}${goto 565}${voffset 0}${color 2c2c2c}${upspeedgraph eth0 32,90 b7b7b7 ebff46}
${voffset -525}${font Mono:size=0}
#
#
## "Mail" node
#${voffset 435}${font Mono:size=0}
${voffset 405}${font Mono:size=0}
${offset 760}${voffset 0}${color}${font Santana:size=11:style=Bold}Gmail:${color} ${exec echo ${EMAIL}}
${offset 760}${voffset 0}${font Monospace:size=9}${color5}${texeci 300 python2 ~/.conky-themes/scripts/mail/cache_gmail.py -nle && echo `~/.conky-themes/scripts/mail/gmail_new.sh` `~/.conky-themes/scripts/mail/gmail_subject.sh` `~/.conky-themes/scripts/mail/gmail_error.sh`}
${voffset -445}${font Mono:size=0}
#
#
## Positioning eset for static text examples below
# Static text example: Logo
${voffset 495}${font Mono:size=0}
${offset 130}${color EAEAEA}${font Ubuntu:pixelsize=20}${color f4732d}Arch Linux
${voffset -545}${font Mono:size=0}
#
#
## Weather
${voffset 180}${font Mono:size=0}
${texeci 300 curl -s "http://weather.yahooapis.com/forecastrss?w=612977&u=c" -o ~/.cache/conky/weather.xml}
# Find weather condition
#${voffset 115}${offset 690}${font Ubuntu:pixelsize=14}${color}${texeci 300 grep "yweather:condition" ~/.cache/conky/weather.xml | grep -o "text=\"[^\"]*\"" | grep -o "\"[^\"]*\"" | grep -o "[^\"]*"}
# Find localization
${voffset 0}${offset 490}${font Ubuntu:pixelsize=12}${color}${execi 300 grep "yweather:location" ~/.cache/conky/weather.xml | grep -o "city=\"[^\"]*\"" | grep -o "\"[^\"]*\"" | grep -o "[^\"]*"}, ${execi 300 grep "yweather:location" ~/.cache/conky/weather.xml | grep -o "country=\"[^\"]*\"" | grep -o "\"[^\"]*\"" | grep -o "[^\"]*"}${font}
# Temperature
${voffset 13}${offset 490}${font Ubuntu:pixelsize=12}${color}${execi 300 grep "yweather:condition" ~/.cache/conky/weather.xml | grep -o "temp=\"[^\"]*\"" | grep -o "\"[^\"]*\"" | grep -o "[^\"]*"}°C${font}
# Humidity
${voffset 13}${offset 490}${font Ubuntu:pixelsize=12}${texeci 300 grep "yweather:atmosphere" ~/.cache/conky/weather.xml | grep -o "humidity=\"[^\"]*\"" | grep -o "\"[^\"]*\"" | grep -o "[^\"]*"}%
# Wind
${voffset 13}${offset 490}${font Ubuntu:pixelsize=12}${color}${texeci 300 grep "yweather:wind" ~/.cache/conky//weather.xml | grep -o "speed=\"[^\"]*\"" | grep -o "\"[^\"]*\"" | grep -o "[^\"]*"}${execi 300 grep "yweather:units" ~/.cache/conky//weather.xml | grep -o "speed=\"[^\"]*\"" | grep -o "\"[^\"]*\"" | grep -o "[^\"]*"}
# Update image for current weather
${texeci 300 cp -f ~/.conky-themes/ConkyInfinitySVG/.conky/scripts/weather/$(grep "yweather:condition" ~/.cache/conky/weather.xml | grep -o "code=\"[^\"]*\"" | grep -o "\"[^\"]*\"" | grep -o "[^\"]*").png ~/.cache/conky/weather.png}
${voffset -92}
# Display images
${image ~/.cache/conky/weather.png -p 413,198 -s 25x25 -f 300}
${voffset -245}${font Mono:size=0}
#
#
## Music
${voffset 200}${font Mono:size=0}
${if_existing /usr/bin/conkyClementine}
${if_running clementine}
${voffset 0}${goto 770}${voffset -2}${font neuropol:size=14}${exec conkyClementine --datatype=PT} / ${exec conkyClementine --datatype=LE}
${offset 30}${color3}${voffset 2}
${voffset -25}${offset 790}${font PizzaDude Bullets:size=10}BBBBB${offset -65}${color 0778ec}${exec conkyClementine -n --datatype=RT --ratingchar=D}$color${font Ubuntu:pixelsize=12 style=bold}${voffset 10}
${offset 770}${exec conkyClementine --datatype=TI | cut -c1-20}
${offset 770}${exec conkyClementine --datatype=AR | cut -c1-20}
${offset 770}${exec conkyClementine --datatype=AL | cut -c1-20}
$endif
$else
$font Clementine not running
$endif
${voffset -180}${font Mono:size=0}
