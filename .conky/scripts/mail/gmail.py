#!/usr/bin/env python
# -*- coding: UTF-8 -*-
#
# Get the number of new e-mails from one's GMail account
# You need:
#  - a GPG key
#  - to set ${GPGKEY} accordingly (e.g. ABCD1234)
#  - to set ${EMAIL} with your GMail e-mail address (e.g. bob@gmail.com)
#  - ~/.dotfiles/gmail.dat that can be generated by putting your password in
#    a file "my_file" and:
#        gpg --output ~/.dotfiles/gmail.dat -r ${GPGKEY} --encrypt my_file
#    Remember to delete "my_file" afterwards...

import sys, os, imaplib, subprocess
import email
from email.header import decode_header
import logging

port = 993
server = 'imap.gmail.com'

def cap(s, l):
    return s if len(s)<=l else s[0:l-3]+'...'

def getSubject(data):
    msg = email.message_from_string(data[0][1])
    dh = decode_header(msg['subject'])
    default_charset = 'ASCII'
    subject = ''.join([ unicode(t[0], t[1] or default_charset) for t in dh ])
    return cap(subject, 28)

# Find username
username = os.environ.get ('EMAIL')
if username == None:
    print ("Error: ${EMAIL} not set")
    sys.exit (1)

# Find GPG key
gpgkey = os.environ.get ('GPGKEY')
if gpgkey == None:
    print ("Error: ${GPGKEY} not set")
    sys.exit (1)

# Decrypt password
encrypted_pw_fname="~/.dotfiles/gmail.dat"
passwd=""
if not os.path.isfile (encrypted_pw_fname):
    proc = subprocess.Popen (["gpg -q --no-tty --use-agent --batch -r "
                              + gpgkey + " --decrypt " + encrypted_pw_fname],
                             stdout=subprocess.PIPE, shell=True)
    (passwd, err) = proc.communicate()

    if passwd == "":
        print ("Error: could not decrypt password (" + encrypted_pw_fname + ")")
        sys.exit (1)

    # Strip '\n'
    passwd = passwd.strip ()
else:
    print ("Error: missing GPG encrypted password (" + encrypted_pw_fname + ")")
    sys.exit (1)

# Prepare connection to IMAP server
try:
    imap_server = imaplib.IMAP4_SSL (server, port)
except:
    # No internet connexion
    print ("Error: no internet connexion")
    sys.exit (1)

# Try to log in
try:
    imap_server.login (username, passwd)
except:
    # Error: check that IMAP is activated in GMail
    print ('Error: login failed')
    sys.exit (1)

typ, data = imap_server.select ('Inbox', readonly=True)
if typ == 'OK':
    typ, data = imap_server.search (None, 'UNSEEN')
    if typ == 'OK':
        id_list = data[0].split ()
        if id_list != []:
            unseen = len (id_list)
            typ, data = imap_server.fetch(id_list[-1],'(RFC822)')
            try:
                subject = getSubject(data)
                print('{} new ("{}")'.format (unseen,subject))
            except:
                print('{} new'.format (unsee))
        else:
            print('0 new')

if typ != 'OK':
    print ('?? new')

imap_server.logout ()

try:
    sys.stdout.close()
except:
    pass
try:
    sys.stderr.close()
except:
    pass
